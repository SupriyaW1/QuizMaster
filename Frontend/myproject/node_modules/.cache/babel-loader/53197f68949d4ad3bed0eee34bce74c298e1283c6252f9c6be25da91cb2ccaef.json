{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptQuiz = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchQuizData();\n    const timer = setInterval(() => {\n      dispatch({\n        type: 'DECREASE_TIME'\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const fetchQuizData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/viewQuiz');\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data');\n      }\n      const data = await response.json();\n      dispatch({\n        type: 'SET_QUESTIONS',\n        payload: data\n      });\n      // Initialize selectedOptions state with default values\n      const initialSelectedOptions = {};\n      data.forEach(question => {\n        initialSelectedOptions[question.id] = null;\n      });\n      dispatch({\n        type: 'SET_SELECTED_OPTION',\n        payload: initialSelectedOptions\n      });\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const handleOptionSelect = (questionId, optionIndex) => {\n    dispatch({\n      type: 'SET_SELECTED_OPTION',\n      payload: {\n        questionId,\n        optionIndex\n      }\n    });\n  };\n  const handleSubmitQuiz = () => {\n    // Perform submission logic here\n    console.log('Submitting quiz...');\n    // Show confirmation popup\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\n      // Submit quiz data along with selected answers\n      console.log('Quiz submitted with answers:', state.selectedOptions);\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Time: \", formatTime(state.remainingTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.questions && Array.isArray(state.questions) && state.questions.map(question => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.cat_id.cat_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `option_${question.id}_${index}`,\n                className: \"form-check-input\",\n                name: `question_${question.id}`,\n                checked: state.selectedOptions[question.id] === index,\n                onChange: () => handleOptionSelect(question.id, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option_${question.id}_${index}`,\n                className: \"form-check-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(AttemptQuiz, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["AttemptQuiz","_s","state","dispatch","useReducer","reducer","initialState","useEffect","fetchQuizData","timer","setInterval","type","clearInterval","response","fetch","ok","Error","data","json","payload","initialSelectedOptions","forEach","question","id","error","console","handleOptionSelect","questionId","optionIndex","handleSubmitQuiz","log","window","confirm","selectedOptions","formatTime","time","minutes","Math","floor","seconds","toString","padStart","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","remainingTime","questions","Array","isArray","map","cat_id","cat_name","question_text","options","option","index","name","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["const AttemptQuiz = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n  \r\n    useEffect(() => {\r\n      fetchQuizData();\r\n      const timer = setInterval(() => {\r\n        dispatch({ type: 'DECREASE_TIME' });\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }, []);\r\n  \r\n    const fetchQuizData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/viewQuiz');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch quiz data');\r\n        }\r\n        const data = await response.json();\r\n        dispatch({ type: 'SET_QUESTIONS', payload: data });\r\n        // Initialize selectedOptions state with default values\r\n        const initialSelectedOptions = {};\r\n        data.forEach((question) => {\r\n          initialSelectedOptions[question.id] = null;\r\n        });\r\n        dispatch({ type: 'SET_SELECTED_OPTION', payload: initialSelectedOptions });\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n  \r\n    const handleOptionSelect = (questionId, optionIndex) => {\r\n      dispatch({ type: 'SET_SELECTED_OPTION', payload: { questionId, optionIndex } });\r\n    };\r\n  \r\n    const handleSubmitQuiz = () => {\r\n      // Perform submission logic here\r\n      console.log('Submitting quiz...');\r\n      // Show confirmation popup\r\n      if (window.confirm('Are you sure you want to submit the quiz?')) {\r\n        // Submit quiz data along with selected answers\r\n        console.log('Quiz submitted with answers:', state.selectedOptions);\r\n      }\r\n    };\r\n  \r\n    const formatTime = (time) => {\r\n      const minutes = Math.floor(time / 60);\r\n      const seconds = time % 60;\r\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"mt-5\">Attempt Quiz</h2>\r\n        <p>Remaining Time: {formatTime(state.remainingTime)}</p>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {state.questions && Array.isArray(state.questions) && state.questions.map(question => (\r\n              <tr key={question.id}>\r\n                <td>{question.cat_id.cat_name}</td>\r\n                <td>{question.question_text}</td>\r\n                {question.options.map((option, index) => (\r\n                  <td key={index}>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={`option_${question.id}_${index}`}\r\n                        className=\"form-check-input\"\r\n                        name={`question_${question.id}`}\r\n                        checked={state.selectedOptions[question.id] === index}\r\n                        onChange={() => handleOptionSelect(question.id, index)}\r\n                      />\r\n                      <label htmlFor={`option_${question.id}_${index}`} className=\"form-check-label\">\r\n                        {option}\r\n                      </label>\r\n                    </div>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn btn-primary\" onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n      </div>\r\n    );\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}