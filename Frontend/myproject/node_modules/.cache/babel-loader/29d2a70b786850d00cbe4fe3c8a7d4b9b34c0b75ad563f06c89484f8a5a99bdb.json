{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptQuiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [remainingTime, setRemainingTime] = useState(60 * 60); // 60 minutes\n\n  const fetchQuizData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/viewQuiz');\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data');\n      }\n      const data = await response.json();\n      const questionsData = data.map(question => {\n        const correctOptionIndex = question.answer - 1; // Assuming answer is 1-indexed\n        return {\n          id: question.id,\n          questionText: question.question_text,\n          options: [question.option1, question.option2, question.option3, question.option4],\n          correctOptionIndex\n        };\n      });\n      setQuestions(questionsData);\n      // Initialize selectedOptions state with default values\n      const initialSelectedOptions = {};\n      questionsData.forEach(question => {\n        initialSelectedOptions[question.id] = null;\n      });\n      setSelectedOptions(initialSelectedOptions);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const handleOptionSelect = (questionId, optionIndex) => {\n    setSelectedOptions(prevSelectedOptions => ({\n      ...prevSelectedOptions,\n      [questionId]: optionIndex\n    }));\n  };\n  const handleSubmitQuiz = () => {\n    // Perform submission logic here\n    console.log('Submitting quiz...');\n    // Show confirmation popup\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\n      // Submit quiz data along with selected answers\n      console.log('Quiz submitted with answers:', selectedOptions);\n    }\n  };\n  useEffect(() => {\n    if (remainingTime === 0) {\n      handleSubmitQuiz();\n    }\n  }, [remainingTime]);\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Time: \", Math.floor(remainingTime / 60), \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `option_${question.id}_${optionIndex}`,\n          className: \"form-check-input\",\n          name: `question_${question.id}`,\n          value: optionIndex,\n          checked: selectedOptions[question.id] === optionIndex,\n          onChange: () => handleOptionSelect(question.id, optionIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option_${question.id}_${optionIndex}`,\n          className: \"form-check-label\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AttemptQuiz, \"XAHXooDqE230r62hpkC1SHrgy5I=\");\n_c = AttemptQuiz;\nexport default AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AttemptQuiz","_s","questions","setQuestions","selectedOptions","setSelectedOptions","remainingTime","setRemainingTime","fetchQuizData","response","fetch","ok","Error","data","json","questionsData","map","question","correctOptionIndex","answer","id","questionText","question_text","options","option1","option2","option3","option4","initialSelectedOptions","forEach","error","console","handleOptionSelect","questionId","optionIndex","prevSelectedOptions","handleSubmitQuiz","log","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","option","type","name","value","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AttemptQuiz = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [remainingTime, setRemainingTime] = useState(60 * 60); // 60 minutes\r\n\r\n  const fetchQuizData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/viewQuiz');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch quiz data');\r\n      }\r\n      const data = await response.json();\r\n      const questionsData = data.map((question) => {\r\n        const correctOptionIndex = question.answer - 1; // Assuming answer is 1-indexed\r\n        return {\r\n          id: question.id,\r\n          questionText: question.question_text,\r\n          options: [question.option1, question.option2, question.option3, question.option4],\r\n          correctOptionIndex,\r\n        };\r\n      });\r\n      setQuestions(questionsData);\r\n      // Initialize selectedOptions state with default values\r\n      const initialSelectedOptions = {};\r\n      questionsData.forEach((question) => {\r\n        initialSelectedOptions[question.id] = null;\r\n      });\r\n      setSelectedOptions(initialSelectedOptions);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = (questionId, optionIndex) => {\r\n    setSelectedOptions((prevSelectedOptions) => ({\r\n      ...prevSelectedOptions,\r\n      [questionId]: optionIndex,\r\n    }));\r\n  };\r\n\r\n  const handleSubmitQuiz = () => {\r\n    // Perform submission logic here\r\n    console.log('Submitting quiz...');\r\n    // Show confirmation popup\r\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\r\n      // Submit quiz data along with selected answers\r\n      console.log('Quiz submitted with answers:', selectedOptions);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (remainingTime === 0) {\r\n      handleSubmitQuiz();\r\n    }\r\n  }, [remainingTime]);\r\n\r\n  useEffect(() => {\r\n    fetchQuizData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mt-5\">Attempt Quiz</h2>\r\n      <p>Remaining Time: {Math.floor(remainingTime / 60)} minutes</p>\r\n      {questions.map((question) => (\r\n        <div key={question.id} className=\"mb-3\">\r\n          <h6>{question.questionText}</h6>\r\n          {question.options.map((option, optionIndex) => (\r\n            <div key={optionIndex} className=\"form-check\">\r\n              <input\r\n                type=\"radio\"\r\n                id={`option_${question.id}_${optionIndex}`}\r\n                className=\"form-check-input\"\r\n                name={`question_${question.id}`}\r\n                value={optionIndex}\r\n                checked={selectedOptions[question.id] === optionIndex}\r\n                onChange={() => handleOptionSelect(question.id, optionIndex)}\r\n              />\r\n              <label htmlFor={`option_${question.id}_${optionIndex}`} className=\"form-check-label\">\r\n                {option}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button className=\"btn btn-primary\" onClick={handleSubmitQuiz}>\r\n        Submit Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttemptQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}