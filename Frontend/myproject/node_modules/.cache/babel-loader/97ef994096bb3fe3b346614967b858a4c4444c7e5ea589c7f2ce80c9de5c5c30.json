{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch('http://localhost:8080/checkUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      // Login successful, handle the response data as needed\n      console.log('Login successful:', data);\n      // Redirect or perform any other action\n    } else {\n      // Login failed, handle error response\n      console.error('Login failed:', data.message);\n      // Update state to display error message or perform other actions\n    }\n  } catch (error) {\n    console.error('Error logging in:', error);\n    // Handle network errors or other exceptions\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","formData","data","json","ok","console","log","error","message"],"sources":["D:/QuizMaster/Frontend/myproject/src/Components/login.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:8080/checkUser', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      // Login successful, handle the response data as needed\r\n      console.log('Login successful:', data);\r\n      // Redirect or perform any other action\r\n    } else {\r\n      // Login failed, handle error response\r\n      console.error('Login failed:', data.message);\r\n      // Update state to display error message or perform other actions\r\n    }\r\n  } catch (error) {\r\n    console.error('Error logging in:', error);\r\n    // Handle network errors or other exceptions\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACf;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,IAAI,CAAC;MACtC;IACF,CAAC,MAAM;MACL;MACAG,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEL,IAAI,CAACM,OAAO,CAAC;MAC5C;IACF;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}