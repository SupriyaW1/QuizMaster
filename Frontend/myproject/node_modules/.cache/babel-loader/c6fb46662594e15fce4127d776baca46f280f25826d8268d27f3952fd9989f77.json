{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptQuiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [remainingTime, setRemainingTime] = useState(60);\n  useEffect(() => {\n    fetchQuizData();\n    const timer = setInterval(() => {\n      setRemainingTime(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const fetchQuizData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/viewQuiz');\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data');\n      }\n      const data = await response.json();\n      setQuestions(data);\n      // Initialize selectedOptions state with default values\n      const initialSelectedOptions = {};\n      data.forEach(question => {\n        initialSelectedOptions[question.id] = null;\n      });\n      setSelectedOptions(initialSelectedOptions);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const handleOptionSelect = (questionId, optionIndex) => {\n    setSelectedOptions(prevSelectedOptions => ({\n      ...prevSelectedOptions,\n      [questionId]: optionIndex\n    }));\n  };\n  const handleSubmitQuiz = () => {\n    // Perform submission logic here\n    console.log('Submitting quiz...');\n    // Show confirmation popup\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\n      // Submit quiz data along with selected answers\n      console.log('Quiz submitted with answers:', selectedOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Time: \", remainingTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `option_${question.id}_${index}`,\n                className: \"form-check-input\",\n                name: `question_${question.id}`,\n                checked: selectedOptions[question.id] === index,\n                onChange: () => handleOptionSelect(question.id, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option_${question.id}_${index}`,\n                className: \"form-check-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AttemptQuiz, \"x3y+XNCTgTM9Ku6efwumiWHrF8Q=\");\n_c = AttemptQuiz;\nexport default AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AttemptQuiz","_s","questions","setQuestions","selectedOptions","setSelectedOptions","remainingTime","setRemainingTime","fetchQuizData","timer","setInterval","prevTime","clearInterval","response","fetch","ok","Error","data","json","initialSelectedOptions","forEach","question","id","error","console","handleOptionSelect","questionId","optionIndex","prevSelectedOptions","handleSubmitQuiz","log","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","options","option","index","type","name","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AttemptQuiz = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n    const [remainingTime, setRemainingTime] = useState(60);\r\n\r\n    useEffect(() => {\r\n        fetchQuizData();\r\n        const timer = setInterval(() => {\r\n            setRemainingTime(prevTime => prevTime - 1);\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    const fetchQuizData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/viewQuiz');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch quiz data');\r\n            }\r\n            const data = await response.json();\r\n            setQuestions(data);\r\n            // Initialize selectedOptions state with default values\r\n            const initialSelectedOptions = {};\r\n            data.forEach(question => {\r\n                initialSelectedOptions[question.id] = null;\r\n            });\r\n            setSelectedOptions(initialSelectedOptions);\r\n        } catch (error) {\r\n            console.error('Error fetching questions:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (questionId, optionIndex) => {\r\n        setSelectedOptions(prevSelectedOptions => ({\r\n            ...prevSelectedOptions,\r\n            [questionId]: optionIndex\r\n        }));\r\n    };\r\n\r\n    const handleSubmitQuiz = () => {\r\n        // Perform submission logic here\r\n        console.log('Submitting quiz...');\r\n        // Show confirmation popup\r\n        if (window.confirm('Are you sure you want to submit the quiz?')) {\r\n            // Submit quiz data along with selected answers\r\n            console.log('Quiz submitted with answers:', selectedOptions);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5\">Attempt Quiz</h2>\r\n            <p>Remaining Time: {remainingTime} seconds</p>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {questions.map(question => (\r\n                        <tr key={question.id}>\r\n                            <td>{question.question}</td>\r\n                            <td>\r\n                                {question.options.map((option, index) => (\r\n                                    <div key={index} className=\"form-check\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id={`option_${question.id}_${index}`}\r\n                                            className=\"form-check-input\"\r\n                                            name={`question_${question.id}`}\r\n                                            checked={selectedOptions[question.id] === index}\r\n                                            onChange={() => handleOptionSelect(question.id, index)}\r\n                                        />\r\n                                        <label htmlFor={`option_${question.id}_${index}`} className=\"form-check-label\">{option}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}