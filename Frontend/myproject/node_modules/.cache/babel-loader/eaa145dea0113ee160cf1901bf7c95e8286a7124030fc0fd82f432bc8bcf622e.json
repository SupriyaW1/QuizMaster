{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  selectedOptions: {},\n  remainingTime: 1800 // 30 minutes * 60 seconds\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_QUESTIONS':\n      return {\n        ...state,\n        questions: action.payload\n      };\n    case 'SET_SELECTED_OPTION':\n      return {\n        ...state,\n        selectedOptions: {\n          ...state.selectedOptions,\n          [action.payload.questionId]: action.payload.optionIndex\n        }\n      };\n    case 'DECREASE_TIME':\n      return {\n        ...state,\n        remainingTime: state.remainingTime - 1\n      };\n    default:\n      return state;\n  }\n};\nconst AttemptQuiz = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchQuizData();\n    const timer = setInterval(() => {\n      dispatch({\n        type: 'DECREASE_TIME'\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const fetchQuizData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/viewQuiz');\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data');\n      }\n      const data = await response.json();\n      dispatch({\n        type: 'SET_QUESTIONS',\n        payload: data\n      });\n      // Initialize selectedOptions state with default values\n      const initialSelectedOptions = {};\n      data.forEach(question => {\n        initialSelectedOptions[question.id] = null;\n      });\n      dispatch({\n        type: 'SET_SELECTED_OPTION',\n        payload: initialSelectedOptions\n      });\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const handleOptionSelect = (questionId, optionIndex) => {\n    dispatch({\n      type: 'SET_SELECTED_OPTION',\n      payload: {\n        questionId,\n        optionIndex\n      }\n    });\n  };\n  const handleSubmitQuiz = () => {\n    // Perform submission logic here\n    console.log('Submitting quiz...');\n    // Show confirmation popup\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\n      // Submit quiz data along with selected answers\n      console.log('Quiz submitted with answers:', state.selectedOptions);\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Time: \", formatTime(state.remainingTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.questions && Array.isArray(state.questions) && state.questions.map(question => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.cat_id.cat_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.option1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.option2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.option3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: question.option4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.questions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `option_${question.id}_${index}`,\n                className: \"form-check-input\",\n                name: `question_${question.id}`,\n                checked: state.selectedOptions[question.id] === index,\n                onChange: () => handleOptionSelect(question.id, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option_${question.id}_${index}`,\n                className: \"form-check-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmitQuiz,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(AttemptQuiz, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AttemptQuiz;\nexport default AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["React","useEffect","useReducer","jsxDEV","_jsxDEV","initialState","questions","selectedOptions","remainingTime","reducer","state","action","type","payload","questionId","optionIndex","AttemptQuiz","_s","dispatch","fetchQuizData","timer","setInterval","clearInterval","response","fetch","ok","Error","data","json","initialSelectedOptions","forEach","question","id","error","console","handleOptionSelect","handleSubmitQuiz","log","window","confirm","formatTime","time","minutes","Math","floor","seconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","cat_id","cat_name","question_text","option1","option2","option3","option4","a","option","index","name","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["import React, { useEffect, useReducer } from 'react';\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    selectedOptions: {},\r\n    remainingTime: 1800 // 30 minutes * 60 seconds\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUESTIONS':\r\n            return { ...state, questions: action.payload };\r\n        case 'SET_SELECTED_OPTION':\r\n            return {\r\n                ...state,\r\n                selectedOptions: {\r\n                    ...state.selectedOptions,\r\n                    [action.payload.questionId]: action.payload.optionIndex\r\n                }\r\n            };\r\n        case 'DECREASE_TIME':\r\n            return { ...state, remainingTime: state.remainingTime - 1 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst AttemptQuiz = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        fetchQuizData();\r\n        const timer = setInterval(() => {\r\n            dispatch({ type: 'DECREASE_TIME' });\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    const fetchQuizData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/viewQuiz');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch quiz data');\r\n            }\r\n            const data = await response.json();\r\n            dispatch({ type: 'SET_QUESTIONS', payload: data });\r\n            // Initialize selectedOptions state with default values\r\n            const initialSelectedOptions = {};\r\n            data.forEach(question => {\r\n                initialSelectedOptions[question.id] = null;\r\n            });\r\n            dispatch({ type: 'SET_SELECTED_OPTION', payload: initialSelectedOptions });\r\n        } catch (error) {\r\n            console.error('Error fetching questions:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (questionId, optionIndex) => {\r\n        dispatch({ type: 'SET_SELECTED_OPTION', payload: { questionId, optionIndex } });\r\n    };\r\n\r\n    const handleSubmitQuiz = () => {\r\n        // Perform submission logic here\r\n        console.log('Submitting quiz...');\r\n        // Show confirmation popup\r\n        if (window.confirm('Are you sure you want to submit the quiz?')) {\r\n            // Submit quiz data along with selected answers\r\n            console.log('Quiz submitted with answers:', state.selectedOptions);\r\n        }\r\n    };\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = time % 60;\r\n        return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5\">Attempt Quiz</h2>\r\n            <p>Remaining Time: {formatTime(state.remainingTime)}</p>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {state.questions && Array.isArray(state.questions) && state.questions.map(question => (\r\n                        <tr key={question.id}>\r\n                            <td>{question.cat_id.cat_name}</td>\r\n                            <td>{question.question_text}</td>\r\n                            <td>{question.option1}</td>\r\n                            <td>{question.option2}</td>\r\n                            <td>{question.option3}</td>\r\n                            <td>{question.option4}</td>\r\n                            <td>\r\n                                {a.questions.map((option, index) => (\r\n                                    <div key={index} className=\"form-check\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id={`option_${question.id}_${index}`}\r\n                                            className=\"form-check-input\"\r\n                                            name={`question_${question.id}`}\r\n                                            checked={state.selectedOptions[question.id] === index}\r\n                                            onChange={() => handleOptionSelect(question.id, index)}\r\n                                        />\r\n                                        <label htmlFor={`option_${question.id}_${index}`} className=\"form-check-label\">{option}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}