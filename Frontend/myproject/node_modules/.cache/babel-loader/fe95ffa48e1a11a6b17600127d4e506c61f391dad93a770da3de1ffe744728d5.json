{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\Components\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  uid: \"\",\n  pwd: \"\"\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        [action.fld]: action.val\n      };\n    case 'reset':\n      return initialState;\n    default:\n      return state;\n  }\n};\nfunction Login() {\n  _s();\n  const [user, dispatch] = useReducer(reducer, initialState);\n  const [info, setInfo] = useState(\"\");\n  const [colour, setColour] = useState({\n    color: 'red'\n  });\n  let navigate = useNavigate();\n  const submitData = e => {\n    e.preventDefault();\n    const url = 'http://localhost:8080/login';\n    const params = {\n      username: user.uid,\n      password: user.pwd\n    };\n    const queryString = new URLSearchParams(params).toString();\n    const reqOptions = {\n      method: \"Post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        login: {\n          username: user.uid,\n          password: user.pwd\n        }\n      })\n    };\n    fetch().then(resp => resp.json()) // Parse response as JSON\n    .then(data => {\n      setInfo(data);\n      if (data.role_id == 2) {\n        navigate('/SellerLand');\n      } else if (data.role_id == 3) navigate('/CustLand');\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setInfo(\"An error occurred while logging in.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"uid\",\n        value: user.uid,\n        onChange: e => dispatch({\n          type: 'update',\n          fld: 'uid',\n          val: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pwd\",\n        value: user.pwd,\n        onChange: e => dispatch({\n          type: 'update',\n          fld: 'pwd',\n          val: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\",\n        onClick: submitData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reset\",\n        value: \"Clear\",\n        onClick: () => dispatch({\n          type: \"reset\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"eeYoGHzcoktgUGj8xQMD04oyDWQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useReducer","useState","useNavigate","jsxDEV","_jsxDEV","initialState","uid","pwd","reducer","state","action","type","fld","val","Login","_s","user","dispatch","info","setInfo","colour","setColour","color","navigate","submitData","e","preventDefault","url","params","username","password","queryString","URLSearchParams","toString","reqOptions","method","headers","body","JSON","stringify","login","fetch","then","resp","json","data","role_id","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/Components/login.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n\r\nconst initialState = {\r\n    uid: \"\",\r\n    pwd: \"\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'update':\r\n            return { ...state, [action.fld]: action.val };\r\n        case 'reset':\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction Login() {\r\n    const [user, dispatch] = useReducer(reducer, initialState);\r\n    const [info, setInfo] = useState(\"\");\r\n    const [colour, setColour] = useState({ color: 'red' });\r\n    let navigate = useNavigate();\r\n\r\n    const submitData = (e) => {\r\n        e.preventDefault();\r\n        const url= 'http://localhost:8080/login'\r\n        const params= \r\n        {\r\n            username: user.uid,\r\n            password: user.pwd\r\n        }\r\n        const queryString= new URLSearchParams(params).toString();\r\n        const reqOptions = {\r\n            method: \"Post\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                login:\r\n                {\r\n                username: user.uid,\r\n                password: user.pwd\r\n                }\r\n            })\r\n            \r\n        };\r\n    \r\n        fetch()\r\n            .then(resp => resp.json()) // Parse response as JSON\r\n            .then(data => {\r\n                setInfo(data);\r\n                if (data.role_id == 2) {\r\n                    navigate('/SellerLand');\r\n                }\r\n                else if(data.role_id==3)\r\n                navigate('/CustLand')\r\n\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching data:\", error);\r\n                setInfo(\"An error occurred while logging in.\");\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form>\r\n                <label>Enter Username</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"uid\" \r\n                    value={user.uid}\r\n                    onChange={(e) => dispatch({ type: 'update', fld: 'uid', val: e.target.value })} \r\n                />\r\n                <br />\r\n                <label>Enter Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    name=\"pwd\" \r\n                    value={user.pwd}\r\n                    onChange={(e) => dispatch({ type: 'update', fld: 'pwd', val: e.target.value })} \r\n                />\r\n                <br />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Login\" \r\n                    onClick={submitData} \r\n                />\r\n                <input \r\n                    type=\"reset\" \r\n                    value=\"Clear\" \r\n                    onClick={() => dispatch({ type: \"reset\" })} \r\n                />\r\n                {/* <div \r\n                    style={colour} \r\n                    onMouseOver={() => setColour({ color: 'blue' })} \r\n                    onMouseLeave={() => setColour({ color: 'red' })}\r\n                    onClick={() => navigate('/forgotpassword')}\r\n                >\r\n                    Forgot Password\r\n                </div> */}\r\n            </form>\r\n            <p>{info}</p>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}