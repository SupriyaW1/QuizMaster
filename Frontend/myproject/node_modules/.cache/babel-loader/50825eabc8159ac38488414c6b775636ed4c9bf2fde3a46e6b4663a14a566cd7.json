{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptQuiz = () => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [remainingTime, setRemainingTime] = useState(30 * 60); // 30 minutes in seconds\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [examStarted, setExamStarted] = useState(false);\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) {\n      fetchSubjects(selectedCategory);\n    }\n  }, [selectedCategory]);\n  useEffect(() => {\n    if (examStarted) {\n      fetchQuizData();\n      const timer = setInterval(() => {\n        setRemainingTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [examStarted]);\n  const fetchQuizData = async () => {\n    try {\n      // Fetch quiz data based on selected category and subject\n      // Example URL: `http://localhost:8080/viewQuiz?category=${selectedCategory}&subject=${selectedSubject}`\n      const response = await fetch(`http://localhost:8080/viewQuiz?category=${selectedCategory}&subject=${selectedSubject}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch quiz data');\n      }\n      const data = await response.json();\n      setQuizData(data);\n      setSelectedOptions(Array(data.length).fill(null));\n    } catch (error) {\n      console.error('Error fetching quiz questions:', error);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      // Fetch categories from Spring API\n      const response = await fetch('http://localhost:8080/allCategories');\n      if (!response.ok) {\n        throw new Error('Failed to fetch categories');\n      }\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const fetchSubjects = async category => {\n    try {\n      // Fetch subjects based on selected category from database\n      const response = await fetch(`http://localhost:8080/allSubjects`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch subjects');\n      }\n      const data = await response.json();\n      setSubjects(data);\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleSubjectChange = event => {\n    setSelectedSubject(event.target.value);\n  };\n  const handleStartExam = () => {\n    setExamStarted(true);\n  };\n  const handleOptionSelect = (questionIndex, optionIndex) => {\n    const updatedSelectedOptions = [...selectedOptions];\n    updatedSelectedOptions[questionIndex] = optionIndex;\n    setSelectedOptions(updatedSelectedOptions);\n  };\n  const handleSubmitQuiz = () => {\n    // Perform submission logic here\n    console.log('Submitting quiz...');\n    // Show confirmation popup\n    if (window.confirm('Are you sure you want to submit the quiz?')) {\n      // Submit quiz data\n      console.log('Quiz submitted with answers:', selectedOptions);\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select Category--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Select Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"subject\",\n        value: selectedSubject,\n        onChange: handleSubjectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select Subject--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.id,\n          children: subject.name\n        }, subject.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), !examStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartExam,\n      children: \"Start Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), examStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remaining Time: \", formatTime(remainingTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), quizData.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option_${index}_${optionIndex}`,\n            name: `question_${index}`,\n            checked: selectedOptions[index] === optionIndex,\n            onChange: () => handleOptionSelect(index, optionIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option_${index}_${optionIndex}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }, this)]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }, this))]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitQuiz,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(AttemptQuiz, \"OgjBc9j2sZxNwomqA2BRnzEB15Y=\");\n_c = AttemptQuiz;\nexport default AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AttemptQuiz","_s","quizData","setQuizData","selectedOptions","setSelectedOptions","remainingTime","setRemainingTime","categories","setCategories","selectedCategory","setSelectedCategory","subjects","setSubjects","selectedSubject","setSelectedSubject","examStarted","setExamStarted","fetchCategories","fetchSubjects","fetchQuizData","timer","setInterval","prevTime","clearInterval","response","fetch","ok","Error","data","json","Array","length","fill","error","console","category","handleCategoryChange","event","target","value","handleSubjectChange","handleStartExam","handleOptionSelect","questionIndex","optionIndex","updatedSelectedOptions","handleSubmitQuiz","log","window","confirm","formatTime","time","minutes","Math","floor","seconds","toString","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","name","subject","onClick","question","index","options","option","type","checked","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AttemptQuiz = () => {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const [remainingTime, setRemainingTime] = useState(30 * 60); // 30 minutes in seconds\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [examStarted, setExamStarted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedCategory) {\r\n            fetchSubjects(selectedCategory);\r\n        }\r\n    }, [selectedCategory]);\r\n\r\n    useEffect(() => {\r\n        if (examStarted) {\r\n            fetchQuizData();\r\n            const timer = setInterval(() => {\r\n                setRemainingTime(prevTime => prevTime - 1);\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timer);\r\n        }\r\n    }, [examStarted]);\r\n\r\n    const fetchQuizData = async () => {\r\n        try {\r\n            // Fetch quiz data based on selected category and subject\r\n            // Example URL: `http://localhost:8080/viewQuiz?category=${selectedCategory}&subject=${selectedSubject}`\r\n            const response = await fetch(`http://localhost:8080/viewQuiz?category=${selectedCategory}&subject=${selectedSubject}`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch quiz data');\r\n            }\r\n            const data = await response.json();\r\n            setQuizData(data);\r\n            setSelectedOptions(Array(data.length).fill(null));\r\n        } catch (error) {\r\n            console.error('Error fetching quiz questions:', error);\r\n        }\r\n    };\r\n\r\n    const fetchCategories = async () => {\r\n        try {\r\n            // Fetch categories from Spring API\r\n            const response = await fetch('http://localhost:8080/allCategories');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch categories');\r\n            }\r\n            const data = await response.json();\r\n            setCategories(data);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n        }\r\n    };\r\n\r\n    const fetchSubjects = async (category) => {\r\n        try {\r\n            // Fetch subjects based on selected category from database\r\n            const response = await fetch(`http://localhost:8080/allSubjects`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch subjects');\r\n            }\r\n            const data = await response.json();\r\n            setSubjects(data);\r\n        } catch (error) {\r\n            console.error('Error fetching subjects:', error);\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const handleSubjectChange = (event) => {\r\n        setSelectedSubject(event.target.value);\r\n    };\r\n\r\n    const handleStartExam = () => {\r\n        setExamStarted(true);\r\n    };\r\n\r\n    const handleOptionSelect = (questionIndex, optionIndex) => {\r\n        const updatedSelectedOptions = [...selectedOptions];\r\n        updatedSelectedOptions[questionIndex] = optionIndex;\r\n        setSelectedOptions(updatedSelectedOptions);\r\n    };\r\n\r\n    const handleSubmitQuiz = () => {\r\n        // Perform submission logic here\r\n        console.log('Submitting quiz...');\r\n        // Show confirmation popup\r\n        if (window.confirm('Are you sure you want to submit the quiz?')) {\r\n            // Submit quiz data\r\n            console.log('Quiz submitted with answers:', selectedOptions);\r\n        }\r\n    };\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = time % 60;\r\n        return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Attempt Quiz</h2>\r\n            <div>\r\n                <label htmlFor=\"category\">Select Category:</label>\r\n                <select id=\"category\" value={selectedCategory} onChange={handleCategoryChange}>\r\n                    <option value=\"\">--Select Category--</option>\r\n                    {categories.map(category => (\r\n                        <option key={category.id} value={category.id}>{category.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"subject\">Select Subject:</label>\r\n                <select id=\"subject\" value={selectedSubject} onChange={handleSubjectChange}>\r\n                    <option value=\"\">--Select Subject--</option>\r\n                    {subjects.map(subject => (\r\n                        <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {!examStarted && (\r\n                <button onClick={handleStartExam}>Start Exam</button>\r\n            )}\r\n            {examStarted && (\r\n                <div>\r\n                    <p>Remaining Time: {formatTime(remainingTime)}</p>\r\n                    {quizData.map((question, index) => (\r\n                        <div key={question.id}>\r\n                            <p>{question.question}</p>\r\n                            {question.options.map((option, optionIndex) => (\r\n                                <div key={optionIndex}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id={`option_${index}_${optionIndex}`}\r\n                                        name={`question_${index}`}\r\n                                        checked={selectedOptions[index] === optionIndex}\r\n                                        onChange={() => handleOptionSelect(index, optionIndex)}\r\n                                    />\r\n                                    <label htmlFor={`option_${index}_${optionIndex}`}>{option}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={handleSubmitQuiz}>Submit Quiz</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}