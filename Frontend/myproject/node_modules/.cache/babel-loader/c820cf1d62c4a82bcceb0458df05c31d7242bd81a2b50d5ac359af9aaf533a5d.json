{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuizMaster\\\\Frontend\\\\myproject\\\\src\\\\components\\\\AttemptQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttemptQuiz = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [examStarted, setExamStarted] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) {\n      fetchSubjects(selectedCategory);\n    }\n  }, [selectedCategory]);\n  const fetchCategories = () => {\n    fetch('http://localhost:8080/allCategories').then(response => {\n      if (response.ok) return response.json();else throw new Error('Failed to fetch categories');\n    }).then(data => {\n      console.log(data);\n      setCategories(data);\n    }).catch(error => {\n      console.error('Error fetching categories:', error);\n    });\n  };\n  const fetchSubjects = category => {\n    fetch(`http://localhost:8080/allSubjects`).then(response => {\n      if (response.ok) return response.json();else throw new Error('Failed to fetch subjects');\n    }).then(data => {\n      setSubjects(data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleSubjectChange = event => {\n    setSelectedSubject(event.target.value);\n  };\n  const handleStartExam = () => {\n    // Save data to database\n    saveDataToDatabase();\n  };\n  const saveDataToDatabase = () => {\n    const data = {\n      sid: 1,\n      subject_id: subject.subject_id,\n      cat_id: category.cat_id,\n      attempted_datetime: new Date().toISOString()\n    };\n    console;\n    fetch('http://localhost:8080/saveExamData', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.ok) {\n        console.log('Data saved to database successfully');\n        navigate('/startQuiz');\n      } else {\n        throw new Error('Failed to save data to database');\n      }\n    }).catch(error => {\n      console.error('Error saving data to database:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Attempt Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category\",\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select Category--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), categories && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.cat_id,\n          children: category.cat_name\n        }, category.cat_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Select Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"subject\",\n        value: selectedSubject,\n        onChange: handleSubjectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select Subject--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), subjects && subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject.subject_id,\n          children: subject.subject_name\n        }, subject.subject_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), !examStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartExam,\n      children: \"Start Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AttemptQuiz, \"N4Ybq0R8rT69yfTwj++vB8Poc7c=\", false, function () {\n  return [useNavigate];\n});\n_c = AttemptQuiz;\nexport default AttemptQuiz;\nvar _c;\n$RefreshReg$(_c, \"AttemptQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AttemptQuiz","_s","categories","setCategories","selectedCategory","setSelectedCategory","subjects","setSubjects","selectedSubject","setSelectedSubject","examStarted","setExamStarted","navigate","fetchCategories","fetchSubjects","fetch","then","response","ok","json","Error","data","console","log","catch","error","category","handleCategoryChange","event","target","value","handleSubjectChange","handleStartExam","saveDataToDatabase","sid","subject_id","subject","cat_id","attempted_datetime","Date","toISOString","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","cat_name","subject_name","onClick","_c","$RefreshReg$"],"sources":["D:/QuizMaster/Frontend/myproject/src/components/AttemptQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AttemptQuiz = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [examStarted, setExamStarted] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedCategory) {\r\n            fetchSubjects(selectedCategory);\r\n        }\r\n    }, [selectedCategory]);\r\n\r\n    const fetchCategories = () => {\r\n        fetch('http://localhost:8080/allCategories')\r\n            .then(response => {\r\n                if (response.ok)\r\n                    return response.json();\r\n                else\r\n                    throw new Error('Failed to fetch categories');\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                setCategories(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching categories:', error);\r\n            });\r\n    };\r\n\r\n    const fetchSubjects = (category) => {\r\n        fetch(`http://localhost:8080/allSubjects`)\r\n            .then(response => {\r\n                if (response.ok)\r\n                    return response.json();\r\n                else\r\n                    throw new Error('Failed to fetch subjects');\r\n            })\r\n            .then(data => {\r\n                setSubjects(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const handleSubjectChange = (event) => {\r\n        setSelectedSubject(event.target.value);\r\n    };\r\n\r\n    const handleStartExam = () => {\r\n        // Save data to database\r\n        saveDataToDatabase();\r\n    };\r\n\r\n    const saveDataToDatabase = () => {\r\n        const data = {\r\n            sid: 1,\r\n            subject_id: subject.subject_id,\r\n            cat_id: category.cat_id,\r\n            attempted_datetime: new Date().toISOString()\r\n        };\r\n       console\r\n        fetch('http://localhost:8080/saveExamData', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log('Data saved to database successfully');\r\n                navigate('/startQuiz');\r\n            } else {\r\n                throw new Error('Failed to save data to database');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error saving data to database:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Attempt Quiz</h2>\r\n            <div>\r\n                <label htmlFor=\"category\">Select Category:</label>\r\n                <select id=\"category\" value={selectedCategory} onChange={handleCategoryChange}>\r\n                    <option value=\"\">--Select Category--</option>\r\n                    {categories && categories.map(category => (\r\n                        <option key={category.cat_id} value={category.cat_id}>{category.cat_name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>  \r\n            <div>\r\n                <label htmlFor=\"subject\">Select Subject:</label>\r\n                <select id=\"subject\" value={selectedSubject} onChange={handleSubjectChange}>\r\n                    <option value=\"\">--Select Subject--</option>\r\n                    {subjects && subjects.map(subject => (\r\n                        <option key={subject.subject_id} value={subject.subject_id}>{subject.subject_name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {!examStarted && (\r\n                <button onClick={handleStartExam}>Start Exam</button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}